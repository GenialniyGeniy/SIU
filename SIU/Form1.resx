<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>